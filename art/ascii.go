package art

import (
	"strings"

	"github.com/shirou/gopsutil/v3/host"
)

var AsciiArts = map[string][]string{
	"alpine": {
		"   /\\ /\\",
		"  /./ \\  \\",
		" /./   \\  \\",
		"/./    \\  \\",
		"//      \\  \\",
		"         \\",
	},
	"android": {
		"  ;,           ,;",
		"   ';,.-----.,;'",
		"  ,'           ',",
		" /    O     O    \\",
		"|                 |",
		"'-----------------'",
	},
	"arch": {
		"       /\\",
		"      /  \\",
		"     /\\   \\",
		"    /      \\",
		"   /   ,,   \\",
		"  /   |  |  -\\",
		" /_-''    ''-_\\",
	},
	"arco": {
		"      /\\",
		"     /  \\",
		"    / /\\ \\",
		"   / /  \\ \\",
		"  / /    \\ \\",
		" / / _____\\ \\",
		"/_/  `----.\\_\\",
	},
	"artix": {
		"      /\\",
		"     /  \\",
		"    /`'.,\\",
		"   /     ',",
		"  /      ,`\\",
		" /   ,.'`.  \\",
		"/.,`'     `'.\\",
	},
	"centos": {
		" ____^____",
		" |\\  |  /|",
		" | \\ | / |",
		"<---- ---->",
		" | / | \\ |",
		" |/__| __\\|",
		"     v",
	},
	"debian": {
		"  _____",
		" /  __ \\",
		"|  /    |",
		"|  \\___-",
		"-_",
		"  --_",
	},
	"endeavour": {
		"      /\\",
		"    //  \\\\",
		"   //    \\ \\",
		" / //     _) )",
		"/_/___-- __-",
		" /____--",
	},
	"fedora": {
		"        ,'''''.    ",
		"       |   ,.  |   ",
		"       |  |  '_'   ",
		"  ,....|  |..      ",
		".'  ,_;|   ..'     ",
		"|  |   |  |        ",
		"|  ',_,'  |        ",
		" '.     ,'         ",
		"   '''''           ",
	},
	"freebsd": {
		"/\\,-'''''-,/\\",
		"\\_)       (_/",
		"|           |",
		"|           |",
		" ;         ;",
		"  '-_____-'",
	},
	"gentoo": {
		" _-----_",
		"(       \\",
		"\\    0   \\",
		" \\        )",
		" /      _/",
		"(     _-",
		"\\____-",
	},
	"linux": {
		"    ___",
		"   (.. |",
		"   (<> |",
		"  / __  \\",
		" ( /  \\ /|",
		"_/\\ __)/_)",
		"\\/----\\/",
	},
	"linux mint": {
		" ___________",
		"|_          \\",
		"  | | _____ |",
		"  | | | | | |",
		"  | | | | | |",
		"  | \\__ ___/ |",
		"  \\_________/",
	},
	"macos": {
		"       .:'",
		"    _ :'_",
		" .'`_`-'_`'.",
		":________.-'",
		":_______:",
		" :_______`-;",
		"  `._.-._.'",
	},
	"manjaro": {
		"||||||||| ||||",
		"||||||||| ||||",
		"||||      ||||",
		"|||| |||| ||||",
		"|||| |||| ||||",
		"|||| |||| ||||",
		"|||| |||| ||||",
	},
	"nixos": {
		"  \\\\  \\\\ //",
		" ==\\\\__\\\\/ //",
		"   //   \\\\//",
		"==//     //==",
		" //\\\\___//",
		"// /\\\\  \\\\==",
		"  // \\\\  \\\\",
	},
	"opensuse": {
		"  _______",
		"__|   __ \\",
		"     / .\\ \\",
		"     \\__/ |",
		"   _______|",
		"   \\_______",
		"__________/",
	},
	"pop!_os": {
		"______",
		"\\   _ \\        __",
		" \\ \\ \\ \\      / /",
		"  \\ \\_\\ \\    / /",
		"   \\  ___\\  /_/",
		"    \\ \\    _",
		"   __\\_\\__(_)_",
		"  (___________)",
	},
	"slackware": {
		"   ________",
		"  /  ______|",
		"  | |______",
		"  \\______  \\",
		"   ______| |",
		"| |________/",
		"|____________",
	},
	"solus": {
		"     /|",
		"    / |\\",
		"   /  | \\ _",
		"  /___|__\\_\\",
		" \\         /",
		"  `-------Â´",
	},
	"ubuntu": {
		"         _",
		"     ---(_)",
		" _/  ---  \\",
		"(_) |   |",
		"  \\  --- _/",
		"     ---(_)",
	},
	"void": {
		"    _______",
		" _ \\______ -",
		"| \\  ___  \\ |",
		"| | /   \\ | |",
		"| | \\___/ | |",
		"| \\______ \\_|",
		" -_______\\",
	},
}

func GetSpecificASCIIArt(distro string) []string {
	lowercaseDistro := strings.ToLower(distro)

	if art, ok := AsciiArts[lowercaseDistro]; ok {
		return art
	}

	for key, art := range AsciiArts {
		if strings.Contains(lowercaseDistro, key) || strings.Contains(key, lowercaseDistro) {
			return art
		}
	}

	return AsciiArts["linux"]
}

func GetASCIIArt() []string {
	hostInfo, err := host.Info()
	if err != nil {

		return AsciiArts["linux"]

	}

	osName := strings.ToLower(hostInfo.Platform)
	if hostInfo.PlatformFamily != "" && hostInfo.PlatformFamily != hostInfo.Platform {
		osName = strings.ToLower(hostInfo.PlatformFamily)
	}

	return GetSpecificASCIIArt(osName)

}
